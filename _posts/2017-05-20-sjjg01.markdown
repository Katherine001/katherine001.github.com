---
layout:     post
title:      "数据结构基础知识总结（1）"
subtitle:   " \"--顺序表、链表\""
date:       2017-05-20 12:00:00
author:     "Alisa"
header-img: "img/sjjg.jpg"
catalog: true
tags:
    - 数据结构与算法设计
---
# 线性表  
## 一、定义及基本概念  
线性表是一个具有<strong>相同特性</strong>的数据元素的<strong>有限序列</strong>。  
相同特性：所有元素属于同一数据类型。  
有限        ：数据元素的个数是有限的。  
序列        ：数据元素由逻辑序号唯一确定，一个线性表中可以有相同值得元素。   
## 二、线性表的运算  
线性表有以下九个基本运算：  
1. 初始化操作InitList(&L):构造一个空的线性表L
2. 销毁线性表DestroyList(&L):释放线性表L占用的内存空间
3. 判断空表ListEmpty(L):若L为空表，返回true，否则返回false
4. 求线性表长度ListLength(L):返回L中元素个数n
5. 输出线性表DispList(L):线性表不为空时，顺序显示L中各节点值域
6. 求指定位置某个数据元素 GetElem(L,i,&e):用e返回L中第i个元素的值
7. 定位查找LocateElem(L,e):返回L中第一个值域与e相等的逻辑位序，若不存在，返回0
8. 插入一个数据元素ListInsert(&L,i,e):在L的第i个元素之前插入新的元素e
9. 删除数据元素ListDelete(&L,i,&e):删除L的第i个元素，并且用e返回其值  
<strong>以上就是线性表9个基本运算，针对不同的数据结构的特性，这些运算的实现方法有所不同.</strong> 


## 三、线性表的作用  
- 程序员可以直接使用它来存放数据——作为存放数据的容器  
- 程序员可以直接使用它的基本运算——完成更加复杂的功能 


## 四、线性表知识体系  
![](001.png)  
# 顺序存储结构  
## 一、结构图  
![](002.png)  
## 二、顺序表类型定义  
```c
typedef struct{
  Elemtype data[Maxsize];
  int length;
}SqList;//顺序表类型
```
说明：  
- Elemtype表示抽象数据类型，实际应用时可以根据需求替换。可以使用如下格式声明（假设我们需要替换为int）  
```c
typedef int Elemtype;
```
- data成员存放元素，length成员存放线性表的实际长度
- 顺序表的逻辑位序与物理位序相差1，因为在计算机中地址从0开始，实际实现运算时应该注意这一点。


